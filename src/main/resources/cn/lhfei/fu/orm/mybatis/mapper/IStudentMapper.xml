<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.lhfei.fu.orm.mybatis.mapper.IStudentMapper">

	<select id="findStudentById" resultType="student" parameterType="string">
		SELECT 
			s.STUDENT_BASE_ID as id, 
			s.STUDENT_ID      as studentId, 
			s.NAME            as name, 
			s.GENDER          as gender, 
			s.CLASS_NAME      as className 
		FROM STUDENT_BASE s  
		WHERE s.STUDENT_ID = #{studentId}
	</select>
	
	<sql id="get_homework_column">
		hb.homework_base_id    as baseId,
		hb.hw_name             as name,
		hb.academic_year       as academicYear,
		hb.semester            as semester,
		ha.homework_archive_id as homeworkArahiveId,
		ha.student_base_id     as studentBaseId,
		ha.archive_name        AS archiveName,
		ha.archive_path        AS archivePath,
		ha.status              AS STATUS,
		hb.operation_time      as operationTime,
		hb.action_type         as actionType,
		hb.teacher_ID          as teacherId,
		hb.teacher_name        as teacherName,
		hb.MODIFY_TIME         as modifyTime,
		hb.CREATE_TIME         as createTime,
		hb.extend              as extend,
		hb.extend1             as extend1,
		hb.class_name          as className,
		hb.course_code         as courseCode,
		hb.course_name         as courseName,
		hb.major_code          as majorCode,
		hb.major_name          as majorName,
		hb.desc_info           as description
	</sql>

	<sql id="get_homework_where_condition">
		<trim prefix="WHERE" prefixOverrides="AND |OR ">			
			<if test="academicYear != null and academicYear != '-1'">
				AND hb.academic_year = #{academicYear}
			</if>
			
			<if test="semester != null and semester != '-1'">
				AND hb.semester = #{semester}
			</if>	
					
			<if test="courseName != null and courseName != '-1'">
				AND hb.course_name = #{courseName}
			</if>			
			
			<if test="className != null and className != '-1'">
				AND hb.class_name = #{className}
			</if>
			<if test="name != null and name != ''">
				AND hb.hw_name like  #{name}
			</if>           	
           	
		</trim>	
	</sql>

	<select id="getHomeworkByStudent" resultType="homeworkBaseModel" parameterType="homeworkBaseModel">
		SELECT * FROM 
		(
			SELECT ROWNUM row_num, A.* FROM 
			(
				select hk.baseId,
				       hk.homeWork as name,
				       hk.academicYear,
				       hk.semester,
				       hk.className,
				       hk.studentName,     
				       hk.student_id          as studentId,
				       <!-- hat.homework_archive_id as homeworkArahiveId, -->
				       hat.status              as STATUS,
				       hk.operationTime,
				       hk.actionType,
				       hk.teacherId,
				       hk.teacherName,
				       hk.modifyTime,
				       hk.createTime,
				       hk.extend,
				       hk.extend1,
				       hk.courseCode,
				       hk.courseName,
				       hk.majorCode,
				       hk.majorName,
				       hk.description
				
				  from (select homework.*,
				               sb.student_id,
				               sb.name as studentName,
				               sb.class_name
				          from student_base sb
				          left join (
				                    
				                    SELECT hb.homework_base_id as baseId,
				                            hb.hw_name          as homeWork,
				                            hb.academic_year    as academicYear,
				                            hb.semester         as semester,
				                            hb.operation_time   as operationTime,
				                            hb.action_type      as actionType,
				                            hb.teacher_ID       as teacherId,
				                            hb.teacher_name     as teacherName,
				                            hb.MODIFY_TIME      as modifyTime,
				                            hb.CREATE_TIME      as createTime,
				                            hb.extend           as extend,
				                            hb.extend1          as extend1,
				                            hb.class_name       as className,
				                            hb.course_code      as courseCode,
				                            hb.course_name      as courseName,
				                            hb.major_code       as majorCode,
				                            hb.major_name       as majorName,
				                            hb.desc_info        as description
				                      from homework_base hb
				                     
				                     <include refid="get_homework_where_condition"/> 
				                     
				                     ) homework
				        
				            on sb.class_name = homework.className
				        
				         where sb.class_name = #{className}
				               
								<if test="studentId != null and studentId != ''">
									AND sb.STUDENT_ID = #{studentId}
				               	</if>
				               
				               	<if test="studentName != null and studentName != ''">
					               	AND sb.NAME LIKE  #{studentName}
				               	</if>
				        	
				        ) hk
				
				  LEFT JOIN 

					(
						SELECT ha.HOMEWORK_BASE_ID, ha.STUDENT_ID, ha.STATUS
						FROM HOMEWORK_ARCHIVE ha
						GROUP BY ha.HOMEWORK_BASE_ID, ha.STUDENT_ID, ha.STATUS
					)hat
					
					ON hk.baseId = hat.homework_base_id
					AND hk.STUDENT_ID = hat.STUDENT_ID
				    
					<if test="status != null and status != -1">
						WHERE hat.status is null or  hat.status = #{status}
					</if>		    
				
				 ORDER BY hk.academicYear DESC, hk.semester DESC, hk.courseName, hk.studentName, hk.homeWork, hk.className
			) A
			
			WHERE ROWNUM &lt;= #{end}
		)
		
		WHERE row_num &gt; #{pageNum}
		
	</select>
	
	<select id="countHomeworkByStudent" resultType="int" parameterType="homeworkBaseModel">
		SELECT COUNT(*) FROM 
			(
				select hk.baseId,
				       hk.homeWork as name,
				       hk.academicYear,
				       hk.semester,
				       hk.className,
				       hk.studentName,     
				       <!-- hat.homework_archive_id as homeworkArahiveId, -->
				       hat.status              AS STATUS,
				       hk.operationTime,
				       hk.actionType,
				       hk.teacherId,
				       hk.teacherName,
				       hk.modifyTime,
				       hk.createTime,
				       hk.extend,
				       hk.extend1,
				       hk.courseCode,
				       hk.courseName,
				       hk.majorCode,
				       hk.majorName,
				       hk.description
				
				  from (select homework.*,
				               sb.student_id,
				               sb.name as studentName,
				               sb.class_name
				          from student_base sb
				          left join (
				                    
				                    SELECT hb.homework_base_id as baseId,
				                            hb.hw_name          as homeWork,
				                            hb.academic_year    as academicYear,
				                            hb.semester         as semester,
				                            hb.operation_time   as operationTime,
				                            hb.action_type      as actionType,
				                            hb.teacher_ID       as teacherId,
				                            hb.teacher_name     as teacherName,
				                            hb.MODIFY_TIME      as modifyTime,
				                            hb.CREATE_TIME      as createTime,
				                            hb.extend           as extend,
				                            hb.extend1          as extend1,
				                            hb.class_name       as className,
				                            hb.course_code      as courseCode,
				                            hb.course_name      as courseName,
				                            hb.major_code       as majorCode,
				                            hb.major_name       as majorName,
				                            hb.desc_info        as description
				                      from homework_base hb
				                     
				                     <include refid="get_homework_where_condition"/> ) homework
				        
				            on sb.class_name = homework.className
				        
				         where sb.class_name = #{className}
				               
								<if test="studentId != null and studentId != ''">
									AND sb.STUDENT_ID = #{studentId}
				               	</if>
				               
				               	<if test="studentName != null and studentName != ''">
					               	AND sb.NAME LIKE  #{studentName}
				               	</if>
				         			               
				        ) hk
				
				  LEFT JOIN 
				  
					(
						SELECT ha.HOMEWORK_BASE_ID, ha.STUDENT_ID, ha.STATUS
						FROM HOMEWORK_ARCHIVE ha
						GROUP BY ha.HOMEWORK_BASE_ID, ha.STUDENT_ID, ha.STATUS
					)hat
					
					ON hk.baseId = hat.homework_base_id
					AND hk.STUDENT_ID = hat.STUDENT_ID				  
				    
					<if test="status != null and status != -1">
						WHERE hat.status is null or  hat.status = #{status}
					</if>	
			) 	
	</select>
</mapper>